family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
set.seed(64)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.5, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
set.seed(67)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.5, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
summary(model)
set.seed(70)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.5, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
set.seed(74)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.5, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
set.seed(84)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.5, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
set.seed(90)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.5, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
summary(model)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
summary(model)
# Define the training control
train_control <- trainControl(method="cv", number=10)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
set.seed(90)
training.samples <- analize_nona_model$Exitus_RITS %>%
createDataPartition(p=0.7, list=FALSE)
train.data = analize_nona_model[training.samples,]
test.data = analize_nona_model[-training.samples,]
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = train.data, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = test.data)
confusionMatrix(predictions, test.data$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions,analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
# Define the training control
train_control <- trainControl(method="cv", number=10)
model <- train(Exitus_RITS ~SAPS, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions,analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = train.data, method = "glm",
trControl = train_control,
family = "binomial")
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = analize_nona_model, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
# Define the training control
train_control <- trainControl(method="repeatedcv", number=10, repeats = 5)
model <- train(Exitus_RITS ~SAPS, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions,analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = analize_nona_model, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
# Define the training control
train_control <- trainControl(method="repeatedcv", number=5, repeats = 5)
model <- train(Exitus_RITS ~SAPS, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions,analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = analize_nona_model, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
# Define the training control
train_control <- trainControl(method="boot", number=200)
model <- train(Exitus_RITS ~SAPS, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions,analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = analize_nona_model, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
# Define the training control
train_control <- trainControl(method="cv", number=5)
model <- train(Exitus_RITS ~SAPS, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions,analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~SAPS+ glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ SOFA, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ ISARIC4C + glu_fac, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII, data = analize_nona_model, method = "glm",
trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
model <- train(Exitus_RITS ~ APACHEII + glu_fac, data = analize_nona_model, method = "glm",                trControl = train_control,
family = "binomial")
predictions <- predict(model, newdata = analize_nona_model)
confusionMatrix(predictions, analize_nona_model$Exitus_RITS, mode = "prec_recall", positive = 'X1')
summary(model)
